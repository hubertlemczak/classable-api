openapi: 3.0.3
info:
  title: Classable API Spec
  description: ''
  version: 1.0.0

servers:
  - url: http://localhost:4040
tags:
  - name: auth
  - name: users
paths:
  /login:
    post:
      tags:
        - auth
      operationId: loginUser
      requestBody:
        description: User login information 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/AuthRes'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /register:
    post:
      tags:
        - auth
      operationId: registerUser
      requestBody:
        description: User registration details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthRes'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      tags:
        - users
      summary: Get all users
      description: Get all users by courseId or by email
      operationId: getAllUsers
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: query
          description: Search all users by email if provided
          schema:
            type: string
        - name: courseId
          in: query
          description: Search all users in a course if provided
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRes'
        403:
          description: Unauthorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT 
  schemas:
    Login:
      type: object 
      properties:
        email:
          type: string 
        password:
          type: string
    Register:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
    AuthRes:
      type: object 
      properties:
          token:
           type: string
    UserRes:
          type: object 
          properties:
              user:
                properties:
                  id:
                    type: string
                  email:
                    type: integer
    Error:
      type: object
      properties:
        error:
          type: string